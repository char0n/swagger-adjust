# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  merge-me:
    name: Merge me!
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@master
        with:
          GITHUB_LOGIN: dependabot[bot]
          GITHUB_TOKEN: ${{ secrets.MERGE_ME_GITHUB_TOKEN }}
          MERGE_METHOD: SQUASH
          PRESET: DEPENDABOT_MINOR

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 15
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Build swagger-adjust
        run: npm run build
      - name: Run security autid on dependencies
        run: npm run security-audit
        env:
          CI: true

      - name: Cache demo Node Modules
        id: cache-node-modules-demo
        uses: actions/cache@v2
        with:
          path: demo/node_modules
          key: node-modules-demo${{ hashFiles('demo/package-lock.json') }}
      - name: Install demo dependencies
        if: steps.cache-node-modules-demo.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ./demo
      - name: Build demo
        run: npm run build
        working-directory: ./demo
      - name: Upload build artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./demo/build

  deploy:
    name: Deploy demo
    if: github.ref == 'refs/heads/main'

    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: Download math result for job 1
        uses: actions/download-artifact@v2
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
